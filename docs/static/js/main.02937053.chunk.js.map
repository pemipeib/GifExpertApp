{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cC6BCQ,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAa,6B,+BCzBhBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACJ,mCACD,GACRC,EAHa,iDAGmCC,UAAUH,GAH7C,kBAEL,GAFK,oBACJ,oCADI,SAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKEA,EAAUC,OALZ,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCULO,EATK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoBDO,EAtBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHvB,MAAK,SAAA+C,GACFF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAGtB,CAACpB,IAEGqB,EDduBI,CAAazB,GAA/Ba,EAFgB,EAErBN,KAAYa,EAFS,EAETA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,sCAAd,SAAqDhB,IACpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEctBe,EAzBM,WAAO,IAAD,EAEazC,mBAAS,IAFtB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCVjC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAI1BzD,M","file":"static/js/main.02937053.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //para que no refresque la pÃ¡gina\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue,...cats,]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                placeholder={'Nombre de la busqueda'}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const apiKey = 'PUUrcz0gdKvJ2Kk80H0V25xPYN4sKePt';\r\n    const limit = 10;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n             <div className=\"card-grid\">\r\n                 {\r\n                     images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} //manda todas las propiedades del objeto\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useState,useEffect} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [category]);\r\n    \r\n    return state;\r\n};\r\n\r\n","import React, {useState} from 'react';\r\n\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState([]);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}